/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.SellerCateRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 店铺分类
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SellerCate extends TableImpl<SellerCateRecord> {

    private static final long serialVersionUID = -1195282565;

    /**
     * The reference instance of <code>ejavashop.seller_cate</code>
     */
    public static final SellerCate SELLER_CATE = new SellerCate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SellerCateRecord> getRecordType() {
        return SellerCateRecord.class;
    }

    /**
     * The column <code>ejavashop.seller_cate.id</code>.
     */
    public final TableField<SellerCateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.seller_cate.seller_id</code>. 商家id
     */
    public final TableField<SellerCateRecord, Integer> SELLER_ID = createField("seller_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商家id");

    /**
     * The column <code>ejavashop.seller_cate.pid</code>. 父类ID
     */
    public final TableField<SellerCateRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "父类ID");

    /**
     * The column <code>ejavashop.seller_cate.name</code>. 分类名称
     */
    public final TableField<SellerCateRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "分类名称");

    /**
     * The column <code>ejavashop.seller_cate.path</code>. 分类路径
     */
    public final TableField<SellerCateRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "分类路径");

    /**
     * The column <code>ejavashop.seller_cate.sort</code>. 排序
     */
    public final TableField<SellerCateRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "排序");

    /**
     * The column <code>ejavashop.seller_cate.create_id</code>. 创建人
     */
    public final TableField<SellerCateRecord, Integer> CREATE_ID = createField("create_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "创建人");

    /**
     * The column <code>ejavashop.seller_cate.create_time</code>. 创建时间
     */
    public final TableField<SellerCateRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>ejavashop.seller_cate.status</code>. 1、显示；2、不显示；3、删除
     */
    public final TableField<SellerCateRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1、显示；2、不显示；3、删除");

    /**
     * Create a <code>ejavashop.seller_cate</code> table reference
     */
    public SellerCate() {
        this("seller_cate", null);
    }

    /**
     * Create an aliased <code>ejavashop.seller_cate</code> table reference
     */
    public SellerCate(String alias) {
        this(alias, SELLER_CATE);
    }

    private SellerCate(String alias, Table<SellerCateRecord> aliased) {
        this(alias, aliased, null);
    }

    private SellerCate(String alias, Table<SellerCateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "店铺分类");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SellerCateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SELLER_CATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SellerCateRecord> getPrimaryKey() {
        return Keys.KEY_SELLER_CATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SellerCateRecord>> getKeys() {
        return Arrays.<UniqueKey<SellerCateRecord>>asList(Keys.KEY_SELLER_CATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SellerCate as(String alias) {
        return new SellerCate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SellerCate rename(String name) {
        return new SellerCate(name, null);
    }
}
