/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.ProductGoodsRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 货品表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductGoods extends TableImpl<ProductGoodsRecord> {

    private static final long serialVersionUID = 556130157;

    /**
     * The reference instance of <code>ejavashop.product_goods</code>
     */
    public static final ProductGoods PRODUCT_GOODS = new ProductGoods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductGoodsRecord> getRecordType() {
        return ProductGoodsRecord.class;
    }

    /**
     * The column <code>ejavashop.product_goods.id</code>.
     */
    public final TableField<ProductGoodsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.product_goods.product_id</code>. 商品ID
     */
    public final TableField<ProductGoodsRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品ID");

    /**
     * The column <code>ejavashop.product_goods.norm_attr_id</code>. 规格属性值ID，用逗号分隔
     */
    public final TableField<ProductGoodsRecord, String> NORM_ATTR_ID = createField("norm_attr_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "规格属性值ID，用逗号分隔");

    /**
     * The column <code>ejavashop.product_goods.norm_name</code>. 规格值，用逗号分隔
     */
    public final TableField<ProductGoodsRecord, String> NORM_NAME = createField("norm_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "规格值，用逗号分隔");

    /**
     * The column <code>ejavashop.product_goods.mall_pc_price</code>. PC价格
     */
    public final TableField<ProductGoodsRecord, BigDecimal> MALL_PC_PRICE = createField("mall_pc_price", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "PC价格");

    /**
     * The column <code>ejavashop.product_goods.mall_mobile_price</code>. Mobile价格
     */
    public final TableField<ProductGoodsRecord, BigDecimal> MALL_MOBILE_PRICE = createField("mall_mobile_price", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "Mobile价格");

    /**
     * The column <code>ejavashop.product_goods.product_stock</code>. 库存
     */
    public final TableField<ProductGoodsRecord, Integer> PRODUCT_STOCK = createField("product_stock", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "库存");

    /**
     * The column <code>ejavashop.product_goods.product_stock_warning</code>. 库存预警值
     */
    public final TableField<ProductGoodsRecord, Integer> PRODUCT_STOCK_WARNING = createField("product_stock_warning", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "库存预警值");

    /**
     * The column <code>ejavashop.product_goods.actual_sales</code>. 所有规格销量相加等于商品总销量
     */
    public final TableField<ProductGoodsRecord, Integer> ACTUAL_SALES = createField("actual_sales", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "所有规格销量相加等于商品总销量");

    /**
     * The column <code>ejavashop.product_goods.sku</code>.
     */
    public final TableField<ProductGoodsRecord, String> SKU = createField("sku", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>ejavashop.product_goods.images</code>. 规格图片（规格图片，用逗号隔开，和规格值对应，如果没有图片，那为空）
     */
    public final TableField<ProductGoodsRecord, String> IMAGES = createField("images", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "规格图片（规格图片，用逗号隔开，和规格值对应，如果没有图片，那为空）");

    /**
     * Create a <code>ejavashop.product_goods</code> table reference
     */
    public ProductGoods() {
        this("product_goods", null);
    }

    /**
     * Create an aliased <code>ejavashop.product_goods</code> table reference
     */
    public ProductGoods(String alias) {
        this(alias, PRODUCT_GOODS);
    }

    private ProductGoods(String alias, Table<ProductGoodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductGoods(String alias, Table<ProductGoodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "货品表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProductGoodsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRODUCT_GOODS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductGoodsRecord> getPrimaryKey() {
        return Keys.KEY_PRODUCT_GOODS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductGoodsRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductGoodsRecord>>asList(Keys.KEY_PRODUCT_GOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductGoods as(String alias) {
        return new ProductGoods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductGoods rename(String name) {
        return new ProductGoods(name, null);
    }
}
