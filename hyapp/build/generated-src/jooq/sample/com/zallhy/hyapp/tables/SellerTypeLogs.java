/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.SellerTypeLogsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 商家类型修改日志表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SellerTypeLogs extends TableImpl<SellerTypeLogsRecord> {

    private static final long serialVersionUID = -2042303436;

    /**
     * The reference instance of <code>ejavashop.seller_type_logs</code>
     */
    public static final SellerTypeLogs SELLER_TYPE_LOGS = new SellerTypeLogs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SellerTypeLogsRecord> getRecordType() {
        return SellerTypeLogsRecord.class;
    }

    /**
     * The column <code>ejavashop.seller_type_logs.id</code>.
     */
    public final TableField<SellerTypeLogsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.seller_type_logs.create_id</code>. 修改人
     */
    public final TableField<SellerTypeLogsRecord, Integer> CREATE_ID = createField("create_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "修改人");

    /**
     * The column <code>ejavashop.seller_type_logs.create_name</code>. 修改人账号
     */
    public final TableField<SellerTypeLogsRecord, String> CREATE_NAME = createField("create_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "修改人账号");

    /**
     * The column <code>ejavashop.seller_type_logs.content</code>. 修改内容
     */
    public final TableField<SellerTypeLogsRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "修改内容");

    /**
     * The column <code>ejavashop.seller_type_logs.create_time</code>. 修改时间
     */
    public final TableField<SellerTypeLogsRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>ejavashop.seller_type_logs.product_cate_id</code>. 商品分类id
     */
    public final TableField<SellerTypeLogsRecord, Integer> PRODUCT_CATE_ID = createField("product_cate_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品分类id");

    /**
     * Create a <code>ejavashop.seller_type_logs</code> table reference
     */
    public SellerTypeLogs() {
        this("seller_type_logs", null);
    }

    /**
     * Create an aliased <code>ejavashop.seller_type_logs</code> table reference
     */
    public SellerTypeLogs(String alias) {
        this(alias, SELLER_TYPE_LOGS);
    }

    private SellerTypeLogs(String alias, Table<SellerTypeLogsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SellerTypeLogs(String alias, Table<SellerTypeLogsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "商家类型修改日志表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SellerTypeLogsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SELLER_TYPE_LOGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SellerTypeLogsRecord> getPrimaryKey() {
        return Keys.KEY_SELLER_TYPE_LOGS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SellerTypeLogsRecord>> getKeys() {
        return Arrays.<UniqueKey<SellerTypeLogsRecord>>asList(Keys.KEY_SELLER_TYPE_LOGS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SellerTypeLogs as(String alias) {
        return new SellerTypeLogs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SellerTypeLogs rename(String name) {
        return new SellerTypeLogs(name, null);
    }
}
