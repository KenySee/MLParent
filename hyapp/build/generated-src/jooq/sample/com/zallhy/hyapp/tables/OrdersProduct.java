/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.OrdersProductRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 网单表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersProduct extends TableImpl<OrdersProductRecord> {

    private static final long serialVersionUID = 88028698;

    /**
     * The reference instance of <code>ejavashop.orders_product</code>
     */
    public static final OrdersProduct ORDERS_PRODUCT = new OrdersProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrdersProductRecord> getRecordType() {
        return OrdersProductRecord.class;
    }

    /**
     * The column <code>ejavashop.orders_product.id</code>.
     */
    public final TableField<OrdersProductRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.orders_product.orders_id</code>. 订单ID
     */
    public final TableField<OrdersProductRecord, Integer> ORDERS_ID = createField("orders_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "订单ID");

    /**
     * The column <code>ejavashop.orders_product.orders_sn</code>. 订单号
     */
    public final TableField<OrdersProductRecord, String> ORDERS_SN = createField("orders_sn", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "订单号");

    /**
     * The column <code>ejavashop.orders_product.seller_id</code>. 商家ID
     */
    public final TableField<OrdersProductRecord, Integer> SELLER_ID = createField("seller_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商家ID");

    /**
     * The column <code>ejavashop.orders_product.product_cate_id</code>. 商品分类ID
     */
    public final TableField<OrdersProductRecord, Integer> PRODUCT_CATE_ID = createField("product_cate_id", org.jooq.impl.SQLDataType.INTEGER, this, "商品分类ID");

    /**
     * The column <code>ejavashop.orders_product.product_id</code>. 商品id
     */
    public final TableField<OrdersProductRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品id");

    /**
     * The column <code>ejavashop.orders_product.product_goods_id</code>. 货品ID
     */
    public final TableField<OrdersProductRecord, Integer> PRODUCT_GOODS_ID = createField("product_goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "货品ID");

    /**
     * The column <code>ejavashop.orders_product.spec_info</code>. 规格详情
     */
    public final TableField<OrdersProductRecord, String> SPEC_INFO = createField("spec_info", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "规格详情");

    /**
     * The column <code>ejavashop.orders_product.product_name</code>. 商品名称
     */
    public final TableField<OrdersProductRecord, String> PRODUCT_NAME = createField("product_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "商品名称");

    /**
     * The column <code>ejavashop.orders_product.product_sku</code>. 抽象商品sku
     */
    public final TableField<OrdersProductRecord, String> PRODUCT_SKU = createField("product_sku", org.jooq.impl.SQLDataType.VARCHAR.length(60).nullable(false), this, "抽象商品sku");

    /**
     * The column <code>ejavashop.orders_product.package_groups_id</code>. 促销套装0、不是促销套装；大于0，促销套装ID，价格是促销套装的ID
     */
    public final TableField<OrdersProductRecord, Integer> PACKAGE_GROUPS_ID = createField("package_groups_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "促销套装0、不是促销套装；大于0，促销套装ID，价格是促销套装的ID");

    /**
     * The column <code>ejavashop.orders_product.mall_groups_id</code>. 商城套装0，不是上次套装；大于0商城套装ID
     */
    public final TableField<OrdersProductRecord, Integer> MALL_GROUPS_ID = createField("mall_groups_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商城套装0，不是上次套装；大于0商城套装ID");

    /**
     * The column <code>ejavashop.orders_product.gift_id</code>. 赠品ID 0:不是赠品；大于0：是赠品，存赠品的ID
     */
    public final TableField<OrdersProductRecord, Integer> GIFT_ID = createField("gift_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "赠品ID 0:不是赠品；大于0：是赠品，存赠品的ID");

    /**
     * The column <code>ejavashop.orders_product.is_gift</code>. 是否是赠品，0、不是；1、是；
     */
    public final TableField<OrdersProductRecord, Byte> IS_GIFT = createField("is_gift", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否是赠品，0、不是；1、是；");

    /**
     * The column <code>ejavashop.orders_product.money_price</code>. 商品单价
     */
    public final TableField<OrdersProductRecord, BigDecimal> MONEY_PRICE = createField("money_price", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "商品单价");

    /**
     * The column <code>ejavashop.orders_product.number</code>. 商品数量
     */
    public final TableField<OrdersProductRecord, Integer> NUMBER = createField("number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品数量");

    /**
     * The column <code>ejavashop.orders_product.money_amount</code>. 网单金额（减去立减优惠后的金额和）
     */
    public final TableField<OrdersProductRecord, BigDecimal> MONEY_AMOUNT = createField("money_amount", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "网单金额（减去立减优惠后的金额和）");

    /**
     * The column <code>ejavashop.orders_product.money_act_single</code>. 立减优惠金额和
     */
    public final TableField<OrdersProductRecord, BigDecimal> MONEY_ACT_SINGLE = createField("money_act_single", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "立减优惠金额和");

    /**
     * The column <code>ejavashop.orders_product.act_single_id</code>. 单品立减活动ID，无设置0
     */
    public final TableField<OrdersProductRecord, Integer> ACT_SINGLE_ID = createField("act_single_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "单品立减活动ID，无设置0");

    /**
     * The column <code>ejavashop.orders_product.act_group_id</code>. 团购ID，为0正常购买
     */
    public final TableField<OrdersProductRecord, Integer> ACT_GROUP_ID = createField("act_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "团购ID，为0正常购买");

    /**
     * The column <code>ejavashop.orders_product.act_flash_sale_id</code>. 限时抢购ID，为0正常购买
     */
    public final TableField<OrdersProductRecord, Integer> ACT_FLASH_SALE_ID = createField("act_flash_sale_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "限时抢购ID，为0正常购买");

    /**
     * The column <code>ejavashop.orders_product.act_flash_sale_product_id</code>. 限时抢购活动商品ID
     */
    public final TableField<OrdersProductRecord, Integer> ACT_FLASH_SALE_PRODUCT_ID = createField("act_flash_sale_product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "限时抢购活动商品ID");

    /**
     * The column <code>ejavashop.orders_product.logistics_id</code>. 物流
     */
    public final TableField<OrdersProductRecord, Integer> LOGISTICS_ID = createField("logistics_id", org.jooq.impl.SQLDataType.INTEGER, this, "物流");

    /**
     * The column <code>ejavashop.orders_product.logistics_name</code>. 物流name
     */
    public final TableField<OrdersProductRecord, String> LOGISTICS_NAME = createField("logistics_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "物流name");

    /**
     * The column <code>ejavashop.orders_product.logistics_number</code>. 发票快递单号
     */
    public final TableField<OrdersProductRecord, String> LOGISTICS_NUMBER = createField("logistics_number", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "发票快递单号");

    /**
     * The column <code>ejavashop.orders_product.shipping_time</code>. 发货时间
     */
    public final TableField<OrdersProductRecord, Timestamp> SHIPPING_TIME = createField("shipping_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "发货时间");

    /**
     * The column <code>ejavashop.orders_product.close_time</code>. 网单完成关闭或取消关闭时间
     */
    public final TableField<OrdersProductRecord, Timestamp> CLOSE_TIME = createField("close_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "网单完成关闭或取消关闭时间");

    /**
     * The column <code>ejavashop.orders_product.system_remark</code>. 系统备注，不给用户显示
     */
    public final TableField<OrdersProductRecord, String> SYSTEM_REMARK = createField("system_remark", org.jooq.impl.SQLDataType.CLOB, this, "系统备注，不给用户显示");

    /**
     * The column <code>ejavashop.orders_product.member_product_back_id</code>. 退货ID，默认为0
     */
    public final TableField<OrdersProductRecord, Integer> MEMBER_PRODUCT_BACK_ID = createField("member_product_back_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "退货ID，默认为0");

    /**
     * The column <code>ejavashop.orders_product.member_product_exchange_id</code>. 换货ID，默认为0
     */
    public final TableField<OrdersProductRecord, Integer> MEMBER_PRODUCT_EXCHANGE_ID = createField("member_product_exchange_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "换货ID，默认为0");

    /**
     * The column <code>ejavashop.orders_product.create_time</code>.
     */
    public final TableField<OrdersProductRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ejavashop.orders_product.update_time</code>.
     */
    public final TableField<OrdersProductRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ejavashop.orders_product.is_comment</code>. 是否评论
     */
    public final TableField<OrdersProductRecord, String> IS_COMMENT = createField("is_comment", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "是否评论");

    /**
     * Create a <code>ejavashop.orders_product</code> table reference
     */
    public OrdersProduct() {
        this("orders_product", null);
    }

    /**
     * Create an aliased <code>ejavashop.orders_product</code> table reference
     */
    public OrdersProduct(String alias) {
        this(alias, ORDERS_PRODUCT);
    }

    private OrdersProduct(String alias, Table<OrdersProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrdersProduct(String alias, Table<OrdersProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "网单表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrdersProductRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ORDERS_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrdersProductRecord> getPrimaryKey() {
        return Keys.KEY_ORDERS_PRODUCT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrdersProductRecord>> getKeys() {
        return Arrays.<UniqueKey<OrdersProductRecord>>asList(Keys.KEY_ORDERS_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersProduct as(String alias) {
        return new OrdersProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrdersProduct rename(String name) {
        return new OrdersProduct(name, null);
    }
}
