/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.NewsPartnerRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 合作伙伴
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NewsPartner extends TableImpl<NewsPartnerRecord> {

    private static final long serialVersionUID = 1175914352;

    /**
     * The reference instance of <code>ejavashop.news_partner</code>
     */
    public static final NewsPartner NEWS_PARTNER = new NewsPartner();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NewsPartnerRecord> getRecordType() {
        return NewsPartnerRecord.class;
    }

    /**
     * The column <code>ejavashop.news_partner.id</code>.
     */
    public final TableField<NewsPartnerRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.news_partner.name</code>.
     */
    public final TableField<NewsPartnerRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>ejavashop.news_partner.image</code>. 图片标识
     */
    public final TableField<NewsPartnerRecord, String> IMAGE = createField("image", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "图片标识");

    /**
     * The column <code>ejavashop.news_partner.url</code>. 链接
     */
    public final TableField<NewsPartnerRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "链接");

    /**
     * The column <code>ejavashop.news_partner.sort</code>. 数字越小，越靠前
     */
    public final TableField<NewsPartnerRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "数字越小，越靠前");

    /**
     * The column <code>ejavashop.news_partner.status</code>. 0、不可见；1、可见
     */
    public final TableField<NewsPartnerRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "0、不可见；1、可见");

    /**
     * The column <code>ejavashop.news_partner.create_id</code>.
     */
    public final TableField<NewsPartnerRecord, Integer> CREATE_ID = createField("create_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.news_partner.create_time</code>.
     */
    public final TableField<NewsPartnerRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ejavashop.news_partner.update_time</code>.
     */
    public final TableField<NewsPartnerRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>ejavashop.news_partner</code> table reference
     */
    public NewsPartner() {
        this("news_partner", null);
    }

    /**
     * Create an aliased <code>ejavashop.news_partner</code> table reference
     */
    public NewsPartner(String alias) {
        this(alias, NEWS_PARTNER);
    }

    private NewsPartner(String alias, Table<NewsPartnerRecord> aliased) {
        this(alias, aliased, null);
    }

    private NewsPartner(String alias, Table<NewsPartnerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "合作伙伴");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NewsPartnerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_NEWS_PARTNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NewsPartnerRecord> getPrimaryKey() {
        return Keys.KEY_NEWS_PARTNER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NewsPartnerRecord>> getKeys() {
        return Arrays.<UniqueKey<NewsPartnerRecord>>asList(Keys.KEY_NEWS_PARTNER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NewsPartner as(String alias) {
        return new NewsPartner(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NewsPartner rename(String name) {
        return new NewsPartner(name, null);
    }
}
