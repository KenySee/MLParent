/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.ProductAttrRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 商品对应属性表(保存商品时插入)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductAttr extends TableImpl<ProductAttrRecord> {

    private static final long serialVersionUID = -573083656;

    /**
     * The reference instance of <code>ejavashop.product_attr</code>
     */
    public static final ProductAttr PRODUCT_ATTR = new ProductAttr();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductAttrRecord> getRecordType() {
        return ProductAttrRecord.class;
    }

    /**
     * The column <code>ejavashop.product_attr.id</code>.
     */
    public final TableField<ProductAttrRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.product_attr.product_id</code>. 商品ID
     */
    public final TableField<ProductAttrRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品ID");

    /**
     * The column <code>ejavashop.product_attr.product_type_attr_id</code>. 属性ID，可以根据属性ID来进行检索
     */
    public final TableField<ProductAttrRecord, Integer> PRODUCT_TYPE_ATTR_ID = createField("product_type_attr_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "属性ID，可以根据属性ID来进行检索");

    /**
     * The column <code>ejavashop.product_attr.name</code>. 属性名称
     */
    public final TableField<ProductAttrRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "属性名称");

    /**
     * The column <code>ejavashop.product_attr.value</code>. 属性值
     */
    public final TableField<ProductAttrRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "属性值");

    /**
     * The column <code>ejavashop.product_attr.state</code>. 1、检索属性；2、自定义属性；3、商品自定义属性（product_tyep_attr_id=0）
     */
    public final TableField<ProductAttrRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1、检索属性；2、自定义属性；3、商品自定义属性（product_tyep_attr_id=0）");

    /**
     * Create a <code>ejavashop.product_attr</code> table reference
     */
    public ProductAttr() {
        this("product_attr", null);
    }

    /**
     * Create an aliased <code>ejavashop.product_attr</code> table reference
     */
    public ProductAttr(String alias) {
        this(alias, PRODUCT_ATTR);
    }

    private ProductAttr(String alias, Table<ProductAttrRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductAttr(String alias, Table<ProductAttrRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "商品对应属性表(保存商品时插入)");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProductAttrRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRODUCT_ATTR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductAttrRecord> getPrimaryKey() {
        return Keys.KEY_PRODUCT_ATTR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductAttrRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductAttrRecord>>asList(Keys.KEY_PRODUCT_ATTR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductAttr as(String alias) {
        return new ProductAttr(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductAttr rename(String name) {
        return new ProductAttr(name, null);
    }
}
