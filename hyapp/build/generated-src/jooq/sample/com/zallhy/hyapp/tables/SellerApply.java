/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.SellerApplyRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 商家申请表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SellerApply extends TableImpl<SellerApplyRecord> {

    private static final long serialVersionUID = -1457265321;

    /**
     * The reference instance of <code>ejavashop.seller_apply</code>
     */
    public static final SellerApply SELLER_APPLY = new SellerApply();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SellerApplyRecord> getRecordType() {
        return SellerApplyRecord.class;
    }

    /**
     * The column <code>ejavashop.seller_apply.id</code>.
     */
    public final TableField<SellerApplyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.seller_apply.user_id</code>. 用户id
     */
    public final TableField<SellerApplyRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户id");

    /**
     * The column <code>ejavashop.seller_apply.name</code>. 用户名
     */
    public final TableField<SellerApplyRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "用户名");

    /**
     * The column <code>ejavashop.seller_apply.password</code>. 密码
     */
    public final TableField<SellerApplyRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "密码");

    /**
     * The column <code>ejavashop.seller_apply.company</code>. 公司名称
     */
    public final TableField<SellerApplyRecord, String> COMPANY = createField("company", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "公司名称");

    /**
     * The column <code>ejavashop.seller_apply.bussiness_license</code>. 营业执照注册号
     */
    public final TableField<SellerApplyRecord, String> BUSSINESS_LICENSE = createField("bussiness_license", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "营业执照注册号");

    /**
     * The column <code>ejavashop.seller_apply.tax_license</code>. 税务登记号
     */
    public final TableField<SellerApplyRecord, String> TAX_LICENSE = createField("tax_license", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "税务登记号");

    /**
     * The column <code>ejavashop.seller_apply.company_province</code>. 企业注册省
     */
    public final TableField<SellerApplyRecord, String> COMPANY_PROVINCE = createField("company_province", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "企业注册省");

    /**
     * The column <code>ejavashop.seller_apply.company_city</code>. 企业注册市
     */
    public final TableField<SellerApplyRecord, String> COMPANY_CITY = createField("company_city", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "企业注册市");

    /**
     * The column <code>ejavashop.seller_apply.company_start_time</code>. 营业开始日期
     */
    public final TableField<SellerApplyRecord, Timestamp> COMPANY_START_TIME = createField("company_start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "营业开始日期");

    /**
     * The column <code>ejavashop.seller_apply.company_end_time</code>. 营业结束日期
     */
    public final TableField<SellerApplyRecord, Timestamp> COMPANY_END_TIME = createField("company_end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "营业结束日期");

    /**
     * The column <code>ejavashop.seller_apply.company_add</code>. 常用地址
     */
    public final TableField<SellerApplyRecord, String> COMPANY_ADD = createField("company_add", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "常用地址");

    /**
     * The column <code>ejavashop.seller_apply.telephone</code>. 联系电话
     */
    public final TableField<SellerApplyRecord, String> TELEPHONE = createField("telephone", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "联系电话");

    /**
     * The column <code>ejavashop.seller_apply.fax</code>. 传真
     */
    public final TableField<SellerApplyRecord, String> FAX = createField("fax", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "传真");

    /**
     * The column <code>ejavashop.seller_apply.bussiness_license_image</code>. 营业执照扫描件
     */
    public final TableField<SellerApplyRecord, String> BUSSINESS_LICENSE_IMAGE = createField("bussiness_license_image", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "营业执照扫描件");

    /**
     * The column <code>ejavashop.seller_apply.organization</code>. 组织机构代码
     */
    public final TableField<SellerApplyRecord, String> ORGANIZATION = createField("organization", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "组织机构代码");

    /**
     * The column <code>ejavashop.seller_apply.bank_user</code>. 开户行账户名称
     */
    public final TableField<SellerApplyRecord, String> BANK_USER = createField("bank_user", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "开户行账户名称");

    /**
     * The column <code>ejavashop.seller_apply.bank_name</code>. 开户行
     */
    public final TableField<SellerApplyRecord, String> BANK_NAME = createField("bank_name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "开户行");

    /**
     * The column <code>ejavashop.seller_apply.bank_name_branch</code>. 开户行支行名称
     */
    public final TableField<SellerApplyRecord, String> BANK_NAME_BRANCH = createField("bank_name_branch", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "开户行支行名称");

    /**
     * The column <code>ejavashop.seller_apply.brand_name_code</code>. 开户行支行联行号
     */
    public final TableField<SellerApplyRecord, String> BRAND_NAME_CODE = createField("brand_name_code", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "开户行支行联行号");

    /**
     * The column <code>ejavashop.seller_apply.bank_code</code>. 银行账号
     */
    public final TableField<SellerApplyRecord, String> BANK_CODE = createField("bank_code", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "银行账号");

    /**
     * The column <code>ejavashop.seller_apply.bank_province</code>. 开户行省
     */
    public final TableField<SellerApplyRecord, String> BANK_PROVINCE = createField("bank_province", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "开户行省");

    /**
     * The column <code>ejavashop.seller_apply.bank_city</code>. 开户行市
     */
    public final TableField<SellerApplyRecord, String> BANK_CITY = createField("bank_city", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "开户行市");

    /**
     * The column <code>ejavashop.seller_apply.legal_person</code>. 法定代表人
     */
    public final TableField<SellerApplyRecord, String> LEGAL_PERSON = createField("legal_person", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "法定代表人");

    /**
     * The column <code>ejavashop.seller_apply.legal_person_card</code>. 法定代表人身份证
     */
    public final TableField<SellerApplyRecord, String> LEGAL_PERSON_CARD = createField("legal_person_card", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "法定代表人身份证");

    /**
     * The column <code>ejavashop.seller_apply.person_card_up</code>. 身份证正面扫描件
     */
    public final TableField<SellerApplyRecord, String> PERSON_CARD_UP = createField("person_card_up", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "身份证正面扫描件");

    /**
     * The column <code>ejavashop.seller_apply.person_card_down</code>. 身份证背面扫描件
     */
    public final TableField<SellerApplyRecord, String> PERSON_CARD_DOWN = createField("person_card_down", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "身份证背面扫描件");

    /**
     * The column <code>ejavashop.seller_apply.person_phone</code>. 手机
     */
    public final TableField<SellerApplyRecord, String> PERSON_PHONE = createField("person_phone", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "手机");

    /**
     * The column <code>ejavashop.seller_apply.email</code>. email
     */
    public final TableField<SellerApplyRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "email");

    /**
     * The column <code>ejavashop.seller_apply.state</code>. 1、提交申请；2、审核通过；3、缴纳保证金；4、审核失败
     */
    public final TableField<SellerApplyRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1、提交申请；2、审核通过；3、缴纳保证金；4、审核失败");

    /**
     * The column <code>ejavashop.seller_apply.type</code>. 1、平台自营；2、商家入驻
     */
    public final TableField<SellerApplyRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1、平台自营；2、商家入驻");

    /**
     * The column <code>ejavashop.seller_apply.opt_id</code>. 审核人ID
     */
    public final TableField<SellerApplyRecord, Integer> OPT_ID = createField("opt_id", org.jooq.impl.SQLDataType.INTEGER, this, "审核人ID");

    /**
     * The column <code>ejavashop.seller_apply.bond</code>. 保证金额度
     */
    public final TableField<SellerApplyRecord, Integer> BOND = createField("bond", org.jooq.impl.SQLDataType.INTEGER, this, "保证金额度");

    /**
     * The column <code>ejavashop.seller_apply.create_time</code>. 创建时间
     */
    public final TableField<SellerApplyRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ejavashop.seller_apply.update_time</code>. 更新时间
     */
    public final TableField<SellerApplyRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * Create a <code>ejavashop.seller_apply</code> table reference
     */
    public SellerApply() {
        this("seller_apply", null);
    }

    /**
     * Create an aliased <code>ejavashop.seller_apply</code> table reference
     */
    public SellerApply(String alias) {
        this(alias, SELLER_APPLY);
    }

    private SellerApply(String alias, Table<SellerApplyRecord> aliased) {
        this(alias, aliased, null);
    }

    private SellerApply(String alias, Table<SellerApplyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "商家申请表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SellerApplyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SELLER_APPLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SellerApplyRecord> getPrimaryKey() {
        return Keys.KEY_SELLER_APPLY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SellerApplyRecord>> getKeys() {
        return Arrays.<UniqueKey<SellerApplyRecord>>asList(Keys.KEY_SELLER_APPLY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SellerApply as(String alias) {
        return new SellerApply(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SellerApply rename(String name) {
        return new SellerApply(name, null);
    }
}
