/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.SellerUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 商家用户表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SellerUser extends TableImpl<SellerUserRecord> {

    private static final long serialVersionUID = 972298913;

    /**
     * The reference instance of <code>ejavashop.seller_user</code>
     */
    public static final SellerUser SELLER_USER = new SellerUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SellerUserRecord> getRecordType() {
        return SellerUserRecord.class;
    }

    /**
     * The column <code>ejavashop.seller_user.id</code>.
     */
    public final TableField<SellerUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.seller_user.name</code>.
     */
    public final TableField<SellerUserRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>ejavashop.seller_user.password</code>.
     */
    public final TableField<SellerUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>ejavashop.seller_user.code</code>. 员工号
     */
    public final TableField<SellerUserRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "员工号");

    /**
     * The column <code>ejavashop.seller_user.real_name</code>. 真实姓名
     */
    public final TableField<SellerUserRecord, String> REAL_NAME = createField("real_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "真实姓名");

    /**
     * The column <code>ejavashop.seller_user.phone</code>. 联系电话
     */
    public final TableField<SellerUserRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "联系电话");

    /**
     * The column <code>ejavashop.seller_user.job</code>. 职务
     */
    public final TableField<SellerUserRecord, String> JOB = createField("job", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "职务");

    /**
     * The column <code>ejavashop.seller_user.seller_id</code>. 所属商家
     */
    public final TableField<SellerUserRecord, Integer> SELLER_ID = createField("seller_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "所属商家");

    /**
     * The column <code>ejavashop.seller_user.role_id</code>. 商家角色ID
     */
    public final TableField<SellerUserRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER, this, "商家角色ID");

    /**
     * The column <code>ejavashop.seller_user.state</code>. 状态 1-正常 2-冻结 3-删除
     */
    public final TableField<SellerUserRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "状态 1-正常 2-冻结 3-删除");

    /**
     * The column <code>ejavashop.seller_user.create_id</code>. 创建人
     */
    public final TableField<SellerUserRecord, Integer> CREATE_ID = createField("create_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "创建人");

    /**
     * The column <code>ejavashop.seller_user.create_time</code>. 创建时间
     */
    public final TableField<SellerUserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>ejavashop.seller_user.update_id</code>. 修改人
     */
    public final TableField<SellerUserRecord, Integer> UPDATE_ID = createField("update_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "修改人");

    /**
     * The column <code>ejavashop.seller_user.update_time</code>. 更新时间（最后一次登陆时间）
     */
    public final TableField<SellerUserRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "更新时间（最后一次登陆时间）");

    /**
     * Create a <code>ejavashop.seller_user</code> table reference
     */
    public SellerUser() {
        this("seller_user", null);
    }

    /**
     * Create an aliased <code>ejavashop.seller_user</code> table reference
     */
    public SellerUser(String alias) {
        this(alias, SELLER_USER);
    }

    private SellerUser(String alias, Table<SellerUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private SellerUser(String alias, Table<SellerUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "商家用户表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SellerUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SELLER_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SellerUserRecord> getPrimaryKey() {
        return Keys.KEY_SELLER_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SellerUserRecord>> getKeys() {
        return Arrays.<UniqueKey<SellerUserRecord>>asList(Keys.KEY_SELLER_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SellerUser as(String alias) {
        return new SellerUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SellerUser rename(String name) {
        return new SellerUser(name, null);
    }
}
