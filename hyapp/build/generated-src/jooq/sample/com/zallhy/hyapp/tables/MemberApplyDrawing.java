/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.MemberApplyDrawingRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 会员提款申请
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberApplyDrawing extends TableImpl<MemberApplyDrawingRecord> {

    private static final long serialVersionUID = 1101964394;

    /**
     * The reference instance of <code>ejavashop.member_apply_drawing</code>
     */
    public static final MemberApplyDrawing MEMBER_APPLY_DRAWING = new MemberApplyDrawing();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemberApplyDrawingRecord> getRecordType() {
        return MemberApplyDrawingRecord.class;
    }

    /**
     * The column <code>ejavashop.member_apply_drawing.id</code>.
     */
    public final TableField<MemberApplyDrawingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.member_apply_drawing.member_id</code>. 会员ID
     */
    public final TableField<MemberApplyDrawingRecord, Integer> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "会员ID");

    /**
     * The column <code>ejavashop.member_apply_drawing.member_name</code>. 会员名称
     */
    public final TableField<MemberApplyDrawingRecord, String> MEMBER_NAME = createField("member_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "会员名称");

    /**
     * The column <code>ejavashop.member_apply_drawing.code</code>. 提现编号
     */
    public final TableField<MemberApplyDrawingRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "提现编号");

    /**
     * The column <code>ejavashop.member_apply_drawing.money</code>. 提现金额
     */
    public final TableField<MemberApplyDrawingRecord, BigDecimal> MONEY = createField("money", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "提现金额");

    /**
     * The column <code>ejavashop.member_apply_drawing.create_time</code>. 申请时间
     */
    public final TableField<MemberApplyDrawingRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "申请时间");

    /**
     * The column <code>ejavashop.member_apply_drawing.auditing_time</code>. 审核时间
     */
    public final TableField<MemberApplyDrawingRecord, Timestamp> AUDITING_TIME = createField("auditing_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "审核时间");

    /**
     * The column <code>ejavashop.member_apply_drawing.handle_time</code>. 处理时间
     */
    public final TableField<MemberApplyDrawingRecord, Timestamp> HANDLE_TIME = createField("handle_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "处理时间");

    /**
     * The column <code>ejavashop.member_apply_drawing.bank</code>. 收款银行
     */
    public final TableField<MemberApplyDrawingRecord, String> BANK = createField("bank", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "收款银行");

    /**
     * The column <code>ejavashop.member_apply_drawing.bank_code</code>. 收款账号
     */
    public final TableField<MemberApplyDrawingRecord, String> BANK_CODE = createField("bank_code", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "收款账号");

    /**
     * The column <code>ejavashop.member_apply_drawing.state</code>. 1、提交申请；2、申请通过；3、已打款；4、处理失败
     */
    public final TableField<MemberApplyDrawingRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT, this, "1、提交申请；2、申请通过；3、已打款；4、处理失败");

    /**
     * The column <code>ejavashop.member_apply_drawing.fail_reason</code>. 失败原因
     */
    public final TableField<MemberApplyDrawingRecord, String> FAIL_REASON = createField("fail_reason", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "失败原因");

    /**
     * The column <code>ejavashop.member_apply_drawing.opt_id</code>. 处理人ID
     */
    public final TableField<MemberApplyDrawingRecord, Integer> OPT_ID = createField("opt_id", org.jooq.impl.SQLDataType.INTEGER, this, "处理人ID");

    /**
     * The column <code>ejavashop.member_apply_drawing.opt_name</code>. 处理人名称
     */
    public final TableField<MemberApplyDrawingRecord, String> OPT_NAME = createField("opt_name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "处理人名称");

    /**
     * Create a <code>ejavashop.member_apply_drawing</code> table reference
     */
    public MemberApplyDrawing() {
        this("member_apply_drawing", null);
    }

    /**
     * Create an aliased <code>ejavashop.member_apply_drawing</code> table reference
     */
    public MemberApplyDrawing(String alias) {
        this(alias, MEMBER_APPLY_DRAWING);
    }

    private MemberApplyDrawing(String alias, Table<MemberApplyDrawingRecord> aliased) {
        this(alias, aliased, null);
    }

    private MemberApplyDrawing(String alias, Table<MemberApplyDrawingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "会员提款申请");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MemberApplyDrawingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MEMBER_APPLY_DRAWING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MemberApplyDrawingRecord> getPrimaryKey() {
        return Keys.KEY_MEMBER_APPLY_DRAWING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MemberApplyDrawingRecord>> getKeys() {
        return Arrays.<UniqueKey<MemberApplyDrawingRecord>>asList(Keys.KEY_MEMBER_APPLY_DRAWING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberApplyDrawing as(String alias) {
        return new MemberApplyDrawing(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberApplyDrawing rename(String name) {
        return new MemberApplyDrawing(name, null);
    }
}
