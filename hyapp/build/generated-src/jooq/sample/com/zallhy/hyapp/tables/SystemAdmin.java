/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.SystemAdminRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 系统管理员表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemAdmin extends TableImpl<SystemAdminRecord> {

    private static final long serialVersionUID = -699910159;

    /**
     * The reference instance of <code>ejavashop.system_admin</code>
     */
    public static final SystemAdmin SYSTEM_ADMIN = new SystemAdmin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SystemAdminRecord> getRecordType() {
        return SystemAdminRecord.class;
    }

    /**
     * The column <code>ejavashop.system_admin.id</code>.
     */
    public final TableField<SystemAdminRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.system_admin.name</code>. 登录名
     */
    public final TableField<SystemAdminRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "登录名");

    /**
     * The column <code>ejavashop.system_admin.password</code>. 密码
     */
    public final TableField<SystemAdminRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "密码");

    /**
     * The column <code>ejavashop.system_admin.role_id</code>. 角色id
     */
    public final TableField<SystemAdminRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER, this, "角色id");

    /**
     * The column <code>ejavashop.system_admin.create_time</code>.
     */
    public final TableField<SystemAdminRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ejavashop.system_admin.create_user</code>. 创建人 只能是管理员
     */
    public final TableField<SystemAdminRecord, Integer> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.INTEGER, this, "创建人 只能是管理员");

    /**
     * The column <code>ejavashop.system_admin.tel</code>. 电话
     */
    public final TableField<SystemAdminRecord, String> TEL = createField("tel", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "电话");

    /**
     * The column <code>ejavashop.system_admin.status</code>. 状态 1-正常 2-冻结 3-删除
     */
    public final TableField<SystemAdminRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT, this, "状态 1-正常 2-冻结 3-删除");

    /**
     * Create a <code>ejavashop.system_admin</code> table reference
     */
    public SystemAdmin() {
        this("system_admin", null);
    }

    /**
     * Create an aliased <code>ejavashop.system_admin</code> table reference
     */
    public SystemAdmin(String alias) {
        this(alias, SYSTEM_ADMIN);
    }

    private SystemAdmin(String alias, Table<SystemAdminRecord> aliased) {
        this(alias, aliased, null);
    }

    private SystemAdmin(String alias, Table<SystemAdminRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "系统管理员表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SystemAdminRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SYSTEM_ADMIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SystemAdminRecord> getPrimaryKey() {
        return Keys.KEY_SYSTEM_ADMIN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SystemAdminRecord>> getKeys() {
        return Arrays.<UniqueKey<SystemAdminRecord>>asList(Keys.KEY_SYSTEM_ADMIN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemAdmin as(String alias) {
        return new SystemAdmin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemAdmin rename(String name) {
        return new SystemAdmin(name, null);
    }
}
