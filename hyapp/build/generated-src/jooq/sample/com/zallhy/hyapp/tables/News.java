/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.NewsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 新闻资讯
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class News extends TableImpl<NewsRecord> {

    private static final long serialVersionUID = 986843243;

    /**
     * The reference instance of <code>ejavashop.news</code>
     */
    public static final News NEWS = new News();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NewsRecord> getRecordType() {
        return NewsRecord.class;
    }

    /**
     * The column <code>ejavashop.news.id</code>.
     */
    public final TableField<NewsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.news.type_id</code>.
     */
    public final TableField<NewsRecord, Integer> TYPE_ID = createField("type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.news.type_path</code>.
     */
    public final TableField<NewsRecord, String> TYPE_PATH = createField("type_path", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>ejavashop.news.title</code>. 新闻标题
     */
    public final TableField<NewsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "新闻标题");

    /**
     * The column <code>ejavashop.news.content</code>.
     */
    public final TableField<NewsRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>ejavashop.news.author</code>. 作者
     */
    public final TableField<NewsRecord, String> AUTHOR = createField("author", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "作者");

    /**
     * The column <code>ejavashop.news.source</code>. 来源
     */
    public final TableField<NewsRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "来源");

    /**
     * The column <code>ejavashop.news.is_out</code>. 是否是外部链接0、不是；1、是
     */
    public final TableField<NewsRecord, Byte> IS_OUT = createField("is_out", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否是外部链接0、不是；1、是");

    /**
     * The column <code>ejavashop.news.out_url</code>. 外部链接的URL
     */
    public final TableField<NewsRecord, String> OUT_URL = createField("out_url", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "外部链接的URL");

    /**
     * The column <code>ejavashop.news.status</code>. 0、不显示；1、显示
     */
    public final TableField<NewsRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "0、不显示；1、显示");

    /**
     * The column <code>ejavashop.news.sort</code>. 排序
     */
    public final TableField<NewsRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "排序");

    /**
     * The column <code>ejavashop.news.is_recommend</code>. 是否推荐文章0、不是推荐文章；1、推荐文章
     */
    public final TableField<NewsRecord, Byte> IS_RECOMMEND = createField("is_recommend", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否推荐文章0、不是推荐文章；1、推荐文章");

    /**
     * The column <code>ejavashop.news.create_id</code>.
     */
    public final TableField<NewsRecord, Integer> CREATE_ID = createField("create_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.news.create_time</code>.
     */
    public final TableField<NewsRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ejavashop.news.update_time</code>.
     */
    public final TableField<NewsRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>ejavashop.news</code> table reference
     */
    public News() {
        this("news", null);
    }

    /**
     * Create an aliased <code>ejavashop.news</code> table reference
     */
    public News(String alias) {
        this(alias, NEWS);
    }

    private News(String alias, Table<NewsRecord> aliased) {
        this(alias, aliased, null);
    }

    private News(String alias, Table<NewsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "新闻资讯");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NewsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_NEWS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NewsRecord> getPrimaryKey() {
        return Keys.KEY_NEWS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NewsRecord>> getKeys() {
        return Arrays.<UniqueKey<NewsRecord>>asList(Keys.KEY_NEWS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public News as(String alias) {
        return new News(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public News rename(String name) {
        return new News(name, null);
    }
}
