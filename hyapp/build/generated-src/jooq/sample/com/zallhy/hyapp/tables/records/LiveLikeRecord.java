/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables.records;


import com.zallhy.hyapp.tables.LiveLike;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LiveLikeRecord extends UpdatableRecordImpl<LiveLikeRecord> implements Record4<Integer, Integer, Integer, Timestamp> {

    private static final long serialVersionUID = -1572416505;

    /**
     * Setter for <code>ejavashop.live_like.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ejavashop.live_like.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ejavashop.live_like.liveRoomId</code>.
     */
    public void setLiveroomid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>ejavashop.live_like.liveRoomId</code>.
     */
    public Integer getLiveroomid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>ejavashop.live_like.userId</code>.
     */
    public void setUserid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>ejavashop.live_like.userId</code>.
     */
    public Integer getUserid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>ejavashop.live_like.createTime</code>.
     */
    public void setCreatetime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>ejavashop.live_like.createTime</code>.
     */
    public Timestamp getCreatetime() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return LiveLike.LIVE_LIKE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return LiveLike.LIVE_LIKE.LIVEROOMID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return LiveLike.LIVE_LIKE.USERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return LiveLike.LIVE_LIKE.CREATETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getLiveroomid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getUserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LiveLikeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LiveLikeRecord value2(Integer value) {
        setLiveroomid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LiveLikeRecord value3(Integer value) {
        setUserid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LiveLikeRecord value4(Timestamp value) {
        setCreatetime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LiveLikeRecord values(Integer value1, Integer value2, Integer value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LiveLikeRecord
     */
    public LiveLikeRecord() {
        super(LiveLike.LIVE_LIKE);
    }

    /**
     * Create a detached, initialised LiveLikeRecord
     */
    public LiveLikeRecord(Integer id, Integer liveroomid, Integer userid, Timestamp createtime) {
        super(LiveLike.LIVE_LIKE);

        set(0, id);
        set(1, liveroomid);
        set(2, userid);
        set(3, createtime);
    }
}
