/*
 * This file is generated by jOOQ.
*/
package com.zallhy.hyapp.tables;


import com.zallhy.hyapp.Ejavashop;
import com.zallhy.hyapp.Keys;
import com.zallhy.hyapp.tables.records.ProductPictureRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 商品对应图片表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductPicture extends TableImpl<ProductPictureRecord> {

    private static final long serialVersionUID = 330553298;

    /**
     * The reference instance of <code>ejavashop.product_picture</code>
     */
    public static final ProductPicture PRODUCT_PICTURE = new ProductPicture();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductPictureRecord> getRecordType() {
        return ProductPictureRecord.class;
    }

    /**
     * The column <code>ejavashop.product_picture.id</code>.
     */
    public final TableField<ProductPictureRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ejavashop.product_picture.product_id</code>. 商品ID
     */
    public final TableField<ProductPictureRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品ID");

    /**
     * The column <code>ejavashop.product_picture.image_path</code>. 图片路径
     */
    public final TableField<ProductPictureRecord, String> IMAGE_PATH = createField("image_path", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "图片路径");

    /**
     * The column <code>ejavashop.product_picture.sort</code>. 排序
     */
    public final TableField<ProductPictureRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "排序");

    /**
     * The column <code>ejavashop.product_picture.create_id</code>. 上传人
     */
    public final TableField<ProductPictureRecord, Integer> CREATE_ID = createField("create_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "上传人");

    /**
     * The column <code>ejavashop.product_picture.create_time</code>. 上传时间
     */
    public final TableField<ProductPictureRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "上传时间");

    /**
     * The column <code>ejavashop.product_picture.seller_id</code>. 商家ID
     */
    public final TableField<ProductPictureRecord, Integer> SELLER_ID = createField("seller_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商家ID");

    /**
     * The column <code>ejavashop.product_picture.state</code>. 1、启用；2、不启用
     */
    public final TableField<ProductPictureRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1、启用；2、不启用");

    /**
     * The column <code>ejavashop.product_picture.product_lead</code>. 商品主图1、主图；2、非主图，主图只能有一张
     */
    public final TableField<ProductPictureRecord, Byte> PRODUCT_LEAD = createField("product_lead", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "商品主图1、主图；2、非主图，主图只能有一张");

    /**
     * Create a <code>ejavashop.product_picture</code> table reference
     */
    public ProductPicture() {
        this("product_picture", null);
    }

    /**
     * Create an aliased <code>ejavashop.product_picture</code> table reference
     */
    public ProductPicture(String alias) {
        this(alias, PRODUCT_PICTURE);
    }

    private ProductPicture(String alias, Table<ProductPictureRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductPicture(String alias, Table<ProductPictureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "商品对应图片表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ejavashop.EJAVASHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProductPictureRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRODUCT_PICTURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductPictureRecord> getPrimaryKey() {
        return Keys.KEY_PRODUCT_PICTURE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductPictureRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductPictureRecord>>asList(Keys.KEY_PRODUCT_PICTURE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPicture as(String alias) {
        return new ProductPicture(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductPicture rename(String name) {
        return new ProductPicture(name, null);
    }
}
